{"version":3,"sources":["components/Forms/SignUp/actions.js","ui/TextFieldDecorator/TextFieldDecorator.js","components/Forms/SignUp/LoginInput/index.js","components/Forms/SignUp/LoginInput/container.js","components/Forms/SignUp/PasswordInput/index.js","components/Forms/SignUp/PasswordInput/container.js","ui/SuccessIcon/SuccessIcon.js","ui/ErrorIcon/ErrorIcon.js","components/Forms/SignUp/Checkbox/index.js","constants.js","components/Forms/SignUp/Checkbox/container.js","components/Forms/SignUp/index.js","components/Forms/SignUp/container.js","components/Forms/SignUp/thunkActions.js","components/Forms/Login/actions.js","components/Forms/Login/LoginInput/index.js","components/Forms/Login/LoginInput/container.js","components/Forms/Login/PasswordInput/index.js","components/Forms/Login/PasswordInput/container.js","components/Forms/Login/index.js","components/Forms/Login/container.js","components/Forms/Login/thunkActions.js","components/Forms/index.js","App.js","components/Forms/SignUp/reducers.js","components/Forms/Login/reducers.js","redux/store.js","index.js"],"names":["setFormType","type","payload","setLoginErrors","errors","useStyles","makeStyles","root","width","maxWidth","TextFieldDecorator","React","props","classes","TextField","className","classNames","size","LoginInput","value","error","onChange","onChangeCallback","useCallback","event","target","required","Boolean","label","helperText","variant","LoginContainer","connect","state","signUp","login","dispatch","setLoginValue","PasswordInput","PasswordContainer","password","setPasswordValue","theme","circle","backgroundColor","green","display","alignItems","justifyContent","height","borderRadius","SuccessIcon","htmlColor","red","ErrorIcon","Checkbox","isChecked","onToggleValue","FormControlLabel","control","color","checked","href","CheckboxContainer","checkboxChecked","SignUp","clearForm","onSignUpButtonClick","onReturnButtonClick","isButtonDisabled","useEffect","inputs","useMemo","Button","disabled","onClick","loader","CircularProgress","content","SignUpContainer","formType","email","getState","body","FormData","append","window","fetch","WC_STASISPAY","url","method","then","res","json","response","console","log","detail","redirect","location","reload","Login","onLoginButtonClick","token","success","SIGNUP","LOGIN","Forms","useState","regType","setRegType","header","map","key","App","initialState","rootReducer","combineReducers","action","undefined","composeEnhancers","composeWithDevTools","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.2da73ab6.chunk.js","sourcesContent":["\nexport const CHANGE_SIGNUP_LOGIN_VALUE = 'signup/CHANGE_SIGNUP_LOGIN_VALUE';\n\nexport const setLoginValue = (value) => ({\n    type: CHANGE_SIGNUP_LOGIN_VALUE,\n    payload: {\n        value\n    }\n});\n\nexport const CHANGE_SIGNUP_PASSWORD_VALUE = 'signup/CHANGE_SIGNUP_PASSWORD_VALUE';\n\nexport const setPasswordValue = (value) => ({\n    type: CHANGE_SIGNUP_PASSWORD_VALUE,\n    payload: {\n        value\n    }\n})\n\nexport const SET_FORM_TYPE = 'signup/SET_FORM_TYPE';\n\nexport const setFormType = (type) => ({\n    type: SET_FORM_TYPE,\n    payload: {\n        type\n    }\n});\n\nexport const CLEAR_FORM = 'signup/CLEAR_FORM';\n\nexport const clearForm = () => ({\n    type: CLEAR_FORM\n})\n\nexport const SET_LOGIN_ERRORS = 'signup/SET_LOGIN_ERRORS';\n\nexport const setLoginErrors = (errors) => ({\n    type: SET_LOGIN_ERRORS,\n    payload: {\n        errors\n    }\n});\n\nexport const SET_PASSWORD_ERRORS = 'signup/SET_PASSWORD_ERRORS';\n\nexport const setPasswordErrors = (errors) => ({\n    type: SET_PASSWORD_ERRORS,\n    payload: {\n        errors\n    }\n})\n\nexport const TOGGLE_CHECKBOX = 'TOGGLE_CHECKBOX';\n\nexport const toggleCheckbox = () => ({\n    type: TOGGLE_CHECKBOX\n})\n","import * as React from 'react';\nimport {TextField} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        maxWidth: '430px'\n    },\n});\n\nexport const TextFieldDecorator = React.memo(props => {\n    const classes = useStyles();\n\n   return (\n       <TextField\n           className={classNames(props.className, classes.root)}\n           size={'small'}\n           {...props}\n       />\n   )\n});\n","import * as React from 'react';\nimport {TextFieldDecorator} from \"../../../../ui/TextFieldDecorator/TextFieldDecorator\";\nimport {useCallback} from \"react\";\n\nexport const LoginInput = React.memo(props => {\n    const { value, error, onChange } = props;\n\n    const onChangeCallback = useCallback((event) => {\n        onChange(event.target.value);\n    }, [onChange]);\n\n    return (\n        <TextFieldDecorator\n            required={true}\n            error={Boolean(error)}\n            label=\"Your email\"\n            helperText={error}\n            variant=\"outlined\"\n            onChange={onChangeCallback}\n            value={value}\n        />\n    )\n})\n","import { connect } from 'react-redux';\nimport {setLoginValue} from \"../actions\";\nimport {LoginInput} from \".\";\n\nconst mapStateToProps = (state) => {\n    return {\n        value: state.signUp.login.value,\n        error: state.signUp.login.errors\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onChange: (value) => {\n            dispatch(setLoginValue(value));\n        }\n    }\n}\n\nexport const LoginContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LoginInput);\n","import * as React from 'react';\nimport {TextFieldDecorator} from \"../../../../ui/TextFieldDecorator/TextFieldDecorator\";\nimport {useCallback} from \"react\";\n\n\nexport const PasswordInput = React.memo(props => {\n    const { value, error, onChange } = props;\n\n    const onChangeCallback = useCallback((event) => {\n        onChange(event.target.value);\n    }, [onChange]);\n\n    return (\n        <TextFieldDecorator\n            required={true}\n            error={Boolean(error)}\n            label=\"Enter password\"\n            helperText={error}\n            variant=\"outlined\"\n            onChange={onChangeCallback}\n            value={value}\n            type={\"password\"}\n        />\n    )\n})\n","import { connect } from 'react-redux';\nimport { PasswordInput} from \".\";\nimport {setPasswordValue} from \"../actions\";\n\nconst mapStateToProps = (state) => {\n    return {\n        value: state.signUp.password.value,\n        error: state.signUp.password.errors\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onChange: (value) => {\n            dispatch(setPasswordValue(value));\n        }\n    }\n}\n\nexport const PasswordContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PasswordInput);\n","import * as React from 'react';\nimport { green } from '@material-ui/core/colors';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CheckIcon from '@material-ui/icons/Check';\n\nconst useStyles = makeStyles((theme) => ({\n    circle: {\n        backgroundColor: green[500],\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '50px',\n        height: '50px',\n        borderRadius: '40px'\n    }\n}));\n\nexport const SuccessIcon = React.memo(props => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.circle}>\n            <CheckIcon htmlColor={'white'}/>\n        </div>\n    )\n});\n","import * as React from 'react';\nimport { red } from '@material-ui/core/colors';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n    circle: {\n        backgroundColor: red[500],\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '50px',\n        height: '50px',\n        borderRadius: '40px'\n    }\n}));\n\nexport const ErrorIcon = React.memo(props => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.circle}>\n            <CloseIcon htmlColor={'white'}/>\n        </div>\n    )\n});\n","import * as React from 'react';\nimport {Checkbox as CheckboxBase, FormControlLabel} from '@material-ui/core';\nimport './Checkbox.css';\nimport {termsUrl} from \"../../../../constants\";\n\n\nexport const Checkbox = React.memo(({isChecked, onToggleValue}) => {\n    return (\n        <div className={'checkbox'}>\n            <FormControlLabel\n                control={\n                    <CheckboxBase\n                        color={\"primary\"}\n                        onChange={onToggleValue}\n                        checked={isChecked}\n                    />\n                }\n                label={<div className={'checkbox__text'}>I accept <a href={termsUrl} target={\"_blank\"}>Terms of Business</a></div>}\n            />\n        </div>\n    )\n})\n\nexport default Checkbox;","export const baseUrl = '/';\nexport const termsUrl = 'https://eurs.gozo.pro/sellback/gozo/docs/disclaimer/';\n","import { connect } from 'react-redux';\nimport { Checkbox } from \".\";\nimport { toggleCheckbox } from \"../actions\";\n\nconst mapStateToProps = (state) => {\n    return {\n        isChecked: state.signUp.checkboxChecked\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onToggleValue: () => {\n            dispatch(toggleCheckbox());\n        }\n    }\n}\n\nexport const CheckboxContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Checkbox);\n","import * as React from 'react';\nimport {LoginContainer} from \"./LoginInput/container\";\nimport {PasswordContainer} from \"./PasswordInput/container\";\nimport './SignUp.css';\nimport {Button, CircularProgress} from \"@material-ui/core\";\nimport {useEffect, useMemo} from \"react\";\nimport {SuccessIcon} from \"../../../ui/SuccessIcon/SuccessIcon\";\nimport {ErrorIcon} from \"../../../ui/ErrorIcon/ErrorIcon\";\nimport {CheckboxContainer} from \"./Checkbox/container\";\n\n\nexport const SignUp = React.memo(props => {\n    const {\n        type,\n        clearForm,\n        onSignUpButtonClick,        \n        onReturnButtonClick,\n        isButtonDisabled\n    } = props;\n\n    useEffect(() => {\n        if(type === \"SUCCESS\") {\n            clearForm();\n        }\n    }, [type, clearForm]);\n\n    const inputs = useMemo(() => {\n        return (\n            <>\n                <div className={'signup__field'}>\n                    <LoginContainer />\n                </div>\n                <div className={'signup__field'}>\n                    <PasswordContainer />\n                </div>\n                <div className={'signup__field'}>\n                    <CheckboxContainer />\n                </div>\n                <Button disabled={isButtonDisabled} onClick={onSignUpButtonClick} variant=\"contained\" color=\"primary\">\n                    SignUp\n                </Button>\n            </>\n        )\n    }, [onSignUpButtonClick, isButtonDisabled]);\n\n    const loader = useMemo(() => {\n        return (\n            <div className={'signup__loader-wrapper'}>\n                <CircularProgress className={'signup__loader'} />\n                {/*{type === SignUpFormType.LOGIN && (<p className={'signup__text'}>Try to login ...</p>)}*/}\n                {/*{type === SignUpFormType.PATCH_KYC && (<p className={'signup__text'}>Try to patch kyc ...</p>)}*/}\n            </div>\n        )\n    }, []);\n\n    const success = (\n            <>\n                <div className={'signup__icon'}>\n                    <SuccessIcon />\n                </div>\n                <p className={'signup__text'}>Success!</p>\n            </>\n        );\n\n    const error = useMemo(() => {\n        return (\n            <>\n                <div className={'signup__icon'}>\n                    <ErrorIcon />\n                </div>\n                <p className={'signup__text'}>Oops!</p>\n                <Button onClick={onReturnButtonClick} variant=\"contained\" color=\"primary\" >Try again</Button>\n            </>\n        )\n    }, [onReturnButtonClick]);\n\n    const content = useMemo(() => {\n        if (type === \"INPUT\") {\n            return inputs;\n        }\n\n        if (type === \"ERROR\") {\n            return error;\n        }\n\n        return loader;\n    }, [type, inputs, loader, error]);\n\n    return (\n        <div className={'signup'}>\n            {content}\n        </div>\n    )\n})\n\nexport default SignUp;","import {connect} from 'react-redux';\n\nimport {SignUp} from \".\";\nimport {onSignUpButtonClick} from \"./thunkActions.js\";\nimport {clearForm, setFormType} from \"./actions\";\n\nconst mapStateToProps = (state) => {\n    return {\n        type: state.signUp.formType,\n        email: state.signUp.login.value, \n        isButtonDisabled: !state.signUp.checkboxChecked || !state.signUp.login.value || !state.signUp.password.value\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSignUpButtonClick: () => {\n            dispatch(onSignUpButtonClick());\n        },\n        onReturnButtonClick: () => {\n            dispatch(setFormType(\"INPUT\"));\n        },\n        clearForm: () => {\n            dispatch(clearForm());\n        }\n    }\n}\n\nexport const SignUpContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SignUp);\n","import {baseUrl} from \"../../../constants\";\nimport {setFormType, setLoginErrors, setPasswordErrors} from \"./actions\";\nimport 'whatwg-fetch';\n\n\nexport const onSignUpButtonClick = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        dispatch(setFormType(\"LOADING\"));\n\n        const email = state.signUp.login.value;\n        const password = state.signUp.password.value;\n\n        const body = new FormData();\n        body.append('email', email)\n        body.append('password', password);\n        body.append('action', 'signup');\n\n        window.fetch(window.WC_STASISPAY.url, {\n            method: 'POST',\n            body\n        })\n            .then(res => res.json())\n            .then(response => {\n                console.log(response);\n                const { email, detail, password, redirect } = response;\n\n                if (redirect) {\n                    window.location = window.location;\n                    window.location.reload();\n                } else {\n                    if (email) {\n                        dispatch(setLoginErrors(email));\n                    } else if (password) {\n                        dispatch(setPasswordErrors(password));\n                    } else if (detail) {\n                        dispatch(setLoginErrors(detail));\n                    }\n                    dispatch(setFormType(\"INPUT\"));\n                }\n            });\n    }\n}","export const CHANGE_LOGIN_VALUE = 'login/CHANGE_LOGIN_VALUE';\n\nexport const setLoginValue = (value) => ({\n    type: CHANGE_LOGIN_VALUE,\n    payload: {\n        value\n    }\n});\n\nexport const CHANGE_PASSWORD_VALUE = 'login/CHANGE_PASSWORD_VALUE';\n\nexport const setPasswordValue = (value) => ({\n    type: CHANGE_PASSWORD_VALUE,\n    payload: {\n        value\n    }\n})\n\nexport const SET_FORM_TYPE = 'login/SET_FORM_TYPE';\n\nexport const setFormType = (type) => ({\n    type: SET_FORM_TYPE,\n    payload: {\n        type\n    }\n});\n\nexport const SET_LOGIN_ERRORS = 'login/SET_LOGIN_ERRORS';\n\nexport const setLoginErrors = (errors) => ({\n    type: SET_LOGIN_ERRORS,\n    payload: {\n        errors\n    }\n});\n\nexport const SET_PASSWORD_ERRORS = 'login/SET_PASSWORD_ERRORS';\n\nexport const setPasswordErrors = (errors) => ({\n    type: SET_PASSWORD_ERRORS,\n    payload: {\n        errors\n    }\n})\n","import * as React from 'react';\nimport {TextFieldDecorator} from \"../../../../ui/TextFieldDecorator/TextFieldDecorator\";\nimport {useCallback} from \"react\";\n\n\nexport const LoginInput = React.memo(props => {\n    const { value, error, onChange } = props;\n\n    const onChangeCallback = useCallback((event) => {\n        onChange(event.target.value);\n    }, [onChange]);\n\n    return (\n        <TextFieldDecorator\n            required={true}\n            error={Boolean(error)}\n            label=\"Your email\"\n            helperText={error}\n            variant=\"outlined\"\n            onChange={onChangeCallback}\n            value={value}\n        />\n    )\n})\n","import { connect } from 'react-redux';\nimport {setLoginValue} from \"../actions\";\nimport {LoginInput} from \".\";\n\nconst mapStateToProps = (state) => {\n    return {\n        value: state.login.login.value,\n        error: state.login.login.errors\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onChange: (value) => {\n            dispatch(setLoginValue(value));\n        }\n    }\n}\n\nexport const LoginContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LoginInput);\n","import * as React from 'react';\nimport {TextFieldDecorator} from \"../../../../ui/TextFieldDecorator/TextFieldDecorator\";\nimport {useCallback} from \"react\";\n\nexport const PasswordInput = React.memo(props => {\n    const { value, error, onChange } = props;\n\n    const onChangeCallback = useCallback((event) => {\n        onChange(event.target.value);\n    }, [onChange]);\n\n    return (\n        <TextFieldDecorator\n            required={true}\n            error={Boolean(error)}\n            label=\"Enter password\"\n            helperText={error}\n            variant=\"outlined\"\n            onChange={onChangeCallback}\n            value={value}\n            type={\"password\"}\n        />\n    )\n})\n","import { connect } from 'react-redux';\nimport { PasswordInput} from \".\";\nimport {setPasswordValue} from \"../actions\";\n\nconst mapStateToProps = (state) => {\n    return {\n        value: state.login.password.value,\n        error: state.login.password.errors\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onChange: (value) => {\n            dispatch(setPasswordValue(value));\n        }\n    }\n}\n\nexport const PasswordContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PasswordInput);\n","import * as React from 'react';\nimport {useMemo} from \"react\";\nimport {LoginContainer} from \"./LoginInput/container\";\nimport {PasswordContainer} from \"./PasswordInput/container\";\nimport {Button, CircularProgress} from \"@material-ui/core\";\nimport './Login.css';\nimport {SuccessIcon} from \"../../../ui/SuccessIcon/SuccessIcon\";\n\n\nexport const Login = React.memo(props => {\n   const { type, onLoginButtonClick, token, isButtonDisabled } = props;\n\n   const inputs = useMemo(() => {\n       return (\n           <>\n               <div className={'login__field'}>\n                   <LoginContainer />\n               </div>\n               <div className={'login__field'}>\n                    <PasswordContainer />\n               </div>\n               <Button onClick={onLoginButtonClick} disabled={isButtonDisabled} variant=\"contained\" color=\"primary\">\n                   Login\n               </Button>\n           </>\n       )\n   }, [onLoginButtonClick, isButtonDisabled]);\n\n   const loader = useMemo(() => {\n       return (\n           <div className={'login__loader'}>\n               <CircularProgress />\n           </div>\n       )\n   }, []);\n\n   const success = useMemo(() => {\n       return (\n           <div className={'login__confirmed'}>\n               <div className={'login__icon'}>\n                   <SuccessIcon />\n               </div>\n               <p className={'login__text'}>Success!</p>\n           </div>\n       )\n   }, []);\n\n   const content = useMemo(() => {\n       if (token) {\n           return success;\n       }\n\n       if (type === \"INPUT\") {\n           return inputs;\n       }\n\n       return loader;\n\n   }, [type, inputs, loader, success, token]);\n\n   return (\n       <div className={'login'}>\n           {content}\n       </div>\n   );\n});\n\nexport default Login;\n","import { connect } from 'react-redux';\n\nimport {onLoginButtonClick} from \"./thunkActions\";\nimport {Login} from \".\";\n\nconst mapStateToProps = (state) => {\n    return {\n        type: state.login.formType,\n        isButtonDisabled: !state.login.login.value || !state.login.password.value\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onLoginButtonClick: () => {\n            dispatch(onLoginButtonClick());\n        }\n    }\n}\n\nexport const LoginContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Login);\n","import {baseUrl} from \"../../../constants\";\nimport {setFormType, setLoginErrors, setPasswordErrors} from \"./actions\";\nimport 'whatwg-fetch';\n\nexport const onLoginButtonClick = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        dispatch(setFormType(\"LOADING\"));\n\n        const email = state.login.login.value;\n        const password = state.login.password.value;\n\n        const body = new FormData();\n        body.append('email', email)\n        body.append('password', password);\n        body.append('action', 'login');\n\n        window.fetch(window.WC_STASISPAY.url, {\n            method: 'POST',\n            body\n        })\n            .then(res => res.json())\n            .then(response => {\n                console.log(response);\n                const { detail, redirect } = response;\n                if (redirect) {\n                    window.location = window.location;\n                    window.location.reload();\n                } else {\n                    if (detail) {\n                        dispatch(setLoginErrors(detail));\n                    }\n                    dispatch(setFormType(\"INPUT\"));\n                }\n            });\n    }\n}\n","import * as React from 'react';\nimport {useMemo, useState} from \"react\";\nimport './Forms.css';\nimport {SignUpContainer} from \"./SignUp/container\";\nimport {LoginContainer} from \"./Login/container\";\n\n\nconst SIGNUP = 'SIGNUP'\nconst LOGIN = 'LOGIN'\n\nconst Forms = React.memo(props => {\n    const [regType, setRegType] = useState(LOGIN);\n\n    const header = useMemo(() => {\n        return (\n            <div className={'form__header'}>\n                {[LOGIN, SIGNUP].map(type => {\n                    if (regType === type) {\n                        return (\n                            <div key=\"div1\" className={'form__header-item form__header-item_active'}>{type}</div>\n                        );\n                    }\n\n                    return (\n                        <div key='div2' className={'form__header-item'} onClick={() => setRegType(type)}>{type}</div>\n                    )\n                })}\n            </div>\n        )\n    }, [regType]);\n\n    const content = useMemo(() => {\n        if(regType === SIGNUP) {\n            return <SignUpContainer />\n        }\n        if(regType === LOGIN) {\n            return <LoginContainer />;\n        }\n        return null;\n    }, [regType])\n\n   return (\n       <div className={'form'}>\n           {header}\n           <div className={'form__content'}>\n               {content}\n           </div>\n       </div>\n   );\n});\n\nexport default Forms;","import React from 'react';\nimport Forms from './components/Forms';\n\nexport default function App() {\n  return (\n    <Forms />\n  );\n}\n","import {\n    CHANGE_SIGNUP_LOGIN_VALUE,\n    CHANGE_SIGNUP_PASSWORD_VALUE,\n    CLEAR_FORM,\n    SET_FORM_TYPE,\n    SET_LOGIN_ERRORS,\n    SET_PASSWORD_ERRORS,\n    TOGGLE_CHECKBOX\n} from \"./actions\";\n\nconst initialState = {\n    login: {\n        value: ''\n    },\n    password: {\n        value: ''\n    },\n    formType: \"INPUT\"    \n};\n\nexport const signUpReducer = function(state = initialState, action) {\n    switch (action.type) {\n        case CHANGE_SIGNUP_LOGIN_VALUE: {\n            return {\n                ...state,\n                login: {\n                    value: action.payload.value,\n                    errors: undefined\n                }\n            };\n        }\n\n        case SET_LOGIN_ERRORS: {\n            return {\n                ...state,\n                login: {\n                    ...state.login,\n                    errors: action.payload.errors\n                }\n            }\n        }\n\n        case CHANGE_SIGNUP_PASSWORD_VALUE: {\n            return {\n                ...state,\n                password: {\n                    value: action.payload.value,\n                    errors: undefined\n                }\n            }\n        }\n\n        case SET_PASSWORD_ERRORS: {\n            return {\n                ...state,\n                password: {\n                    ...state.password,\n                    errors: action.payload.errors\n                }\n            }\n        }\n\n        case CLEAR_FORM: {\n            return {\n                ...state,\n                password: {\n                    value: ''\n                },\n                login: {\n                    value: ''\n                },\n                formType: \"INPUT\"\n            }\n        }\n\n        case SET_FORM_TYPE: {\n            return {\n                ...state,\n                formType: action.payload.type\n            }\n        }\n        \n        case TOGGLE_CHECKBOX: {\n            return {\n                ...state,\n                checkboxChecked: !state.checkboxChecked\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n","import {\n    CHANGE_LOGIN_VALUE,\n    CHANGE_PASSWORD_VALUE,\n    SET_FORM_TYPE,\n    SET_LOGIN_ERRORS,\n    SET_PASSWORD_ERRORS\n} from \"./actions\";\n\nconst initialState = {\n    login: {\n        value: ''\n    },\n    password: {\n        value: ''\n    },\n    formType: \"INPUT\"\n};\n\nexport const loginReducer = function(state = initialState, action) {\n    switch (action.type) {\n        case CHANGE_LOGIN_VALUE: {\n            return {\n                ...state,\n                login: {\n                    value: action.payload.value,\n                    errors: undefined\n                }\n            };\n        }\n\n        case SET_LOGIN_ERRORS: {\n            return {\n                ...state,\n                login: {\n                    ...state.login,\n                    errors: action.payload.errors\n                }\n            }\n        }\n\n        case CHANGE_PASSWORD_VALUE: {\n            return {\n                ...state,\n                password: {\n                    value: action.payload.value,\n                    errors: undefined\n                }\n            }\n        }\n\n        case SET_PASSWORD_ERRORS: {\n            return {\n                ...state,\n                password: {\n                    ...state.password,\n                    errors: action.payload.errors\n                }\n            }\n        }\n\n        case SET_FORM_TYPE: {\n            return {\n                ...state,\n                formType: action.payload.type\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n","import { composeWithDevTools } from 'redux-devtools-extension';\nimport { applyMiddleware, createStore } from \"redux\";\nimport thunk from 'redux-thunk'\n\nimport { combineReducers } from \"redux\";\nimport { signUpReducer } from \"../components/Forms/SignUp/reducers\";\nimport { loginReducer } from \"../components/Forms/Login/reducers\";\n\nconst rootReducer = combineReducers({\n  signUp: signUpReducer,\n  login: loginReducer\n});\n\n\nconst composeEnhancers = composeWithDevTools({});\n\nexport default createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store = { store }>\n            <App />\n        </Provider> \n    </React.StrictMode>,\n    document.getElementById('wc-stasispay-root')\n);"],"sourceRoot":""}